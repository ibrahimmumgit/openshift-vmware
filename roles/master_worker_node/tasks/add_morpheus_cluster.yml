---
- name: Fetch Kubeconfig
  command: oc config view --raw  --kubeconfig={{ openshift_working_directory_path }}/install-dir/auth/kubeconfig
  register: kubeconfig_output

- name: Fetch kubeadmin password
  command: "cat {{ openshift_working_directory_path }}/install-dir/auth/kubeadmin-password"
  register: kubeadminpassword_output

- name: Store Kubeconfig in a variable
  set_fact:
    kubeadminpassowrd: "{{ kubeadminpassword_output.stdout }}"

# - name: Get OAuth Token
#   uri:
#     url: "https://oauth-openshift.apps.lab.ocp.local/oauth/arize?response_type=token&client_id=openshift-challenging-client"
#     method: POST
#     body_format: form-urlencoded
#     return_content: true
#     validate_certs: false
#     user: "kubeadmin"
#     password: "{{ kubeadminpassowrd }}"
#     force_basic_auth: true
#     # body:
#     #   username: "kubeadmin"
#     #   password: "{{ kubeadminpassowrd }}"
#     #   #client_id: "openshift-challenging-client"
#     #   #client_secret: "your_client_secret"
#   register: token_response


- name: Perform HTTP request
  uri:
    url: "https://oauth-openshift.apps.lab.ocp.local/oauth/authorize?response_type=token&client_id=openshift-challenging-client"
    method: GET
    headers:
      X-CSRF-Token: "xxx"
    user: kubeadmin
    password: "{{ kubeadminpassowrd }}"
    return_content: yes
    status_code: 200
    validate_certs: false
  register: response

- name: Extract OAuth Token
  set_fact:
    ssh: "{{ response.url.split('access_token=')}}"

- name: Split variable before a value
  set_fact:
    kubeadmin_token: "{{ ssh[1].split('&')[0] }}"

- name: Display split result
  debug:
    var: kubeadmin_token
 


- name: set_fact the ignition_value
  set_fact:
    kubeconfig: "{{ kubeconfig_output.stdout | regex_replace('\n', '')  }}"
    apiurl: "https://api.lab.ocp.local:6443"
    apitoken: "{{ kubeadmin_token }}"
    bearer_token: "c333e41e-5e89-41e1-94f4-87600bdab69e"
    morpheus_server: "hpe-cmp.helionit.io"
    bearer_token: "ab8ec0c3-faca-4ff2-9a44-13b1411c11ff"
    
- debug:
    var: kubeconfig
    
- name: Create External kuberenets cluster
  uri:
    url:  https://morpheus-5-mgt.helionit.io/api/clusters
    method: post
    body_format: json
    # body:      
    #   "instance": 
    #     - ownerId: {{ owner_id }}
    body: |-
      { "cluster": { "type": "external-kubernetes-cluster",
      "group": {
        "id": 1143
      },
      "name": "{{ openshift_cluster_name }}" ,
      "cloud": {
        "id": 235
      },
      "layout": {
        "id": 251
      },
      "server": {
        "name":  "{{ openshift_cluster_name }}",
        "config": {
          "apiUrl": "{{ apiurl }}",
          "apiToken": "{{ apitoken }}",
          "serviceAccess": "{{ kubeconfig }}"
        },
        "plan": {
          "id": 113,
          "code": "external-default",
          "options": {
          }
        },
        "visibility": "private",
        "networkDomain": null,       
        }
        }
      }
    headers:
      Content-Type: "application/json"
      Authorization: "Bearer {{ bearer_token }}"
    return_content: true
    validate_certs: false
    status_code: 200
    timeout: 30
  register: webpage
